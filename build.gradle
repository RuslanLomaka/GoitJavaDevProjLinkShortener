plugins {
    id 'java'
    id 'org.springframework.boot' version '3.5.5'
    id 'io.spring.dependency-management' version '1.1.7'
    id 'checkstyle'
}

group = 'org.decepticons'
version = '0.0.1-SNAPSHOT'
description = 'linkShortener'

java {
    toolchain { languageVersion = JavaLanguageVersion.of(21) }
}

repositories { mavenCentral() }

checkstyle {
    toolVersion = "11.0.1"
    configFile = file("${rootDir}/config/checkstyle/checkstyle.xml")
    showViolations = true
    ignoreFailures = false
}
tasks.withType(Checkstyle).configureEach {
    reports { xml.required = true; html.required = true }
}
tasks.named("check")   { dependsOn(tasks.named("checkstyleMain")) }
tasks.named("build")   { dependsOn(tasks.named("checkstyleMain")) }
tasks.named("bootRun") { dependsOn(tasks.named("checkstyleMain")) }

dependencies {
    // Core Spring Boot
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-web'

    // DB & Migrations
    implementation 'org.flywaydb:flyway-core'
    implementation 'org.flywaydb:flyway-database-postgresql'
    runtimeOnly 'com.h2database:h2'
    runtimeOnly 'org.postgresql:postgresql'

    // OpenAPI / Swagger UI
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.8.12'

    // Lombok (compileOnly + annotationProcessor)
    compileOnly 'org.projectlombok:lombok:1.18.38'
    annotationProcessor 'org.projectlombok:lombok:1.18.38'

    // JSON Web Token
    implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'

    // Testing
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
    testImplementation 'org.testcontainers:postgresql'
    testImplementation 'org.testcontainers:junit-jupiter'
}

test { useJUnitPlatform() }
