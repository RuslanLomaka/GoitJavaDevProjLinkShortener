plugins {
    id 'java'
    id 'org.springframework.boot' version '3.5.5'
    id 'io.spring.dependency-management' version '1.1.7'
    id 'checkstyle'
}

group = 'org.decepticons'
version = '0.0.1-SNAPSHOT'
description = 'linkShortener'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

repositories { mavenCentral() }

ext {
    lombokVersion = "1.18.38"
    mockitoVersion = "5.19.0"
    junitVersion  = "6.0.0-RC2"
}

checkstyle {
    toolVersion = "11.0.1"
    configFile = file("${rootDir}/config/checkstyle/checkstyle.xml")
    showViolations = true
    ignoreFailures = false
}
tasks.withType(Checkstyle).configureEach {
    reports {
        xml.required = true
        html.required = true
    }
}

/* Wire Checkstyle into common flows (no compileJava linkage, avoids cycles) */
tasks.named("check")  { dependsOn(tasks.named("checkstyleMain")) }
tasks.named("build")  { dependsOn(tasks.named("checkstyleMain")) }
tasks.named("bootRun"){ dependsOn(tasks.named("checkstyleMain")) }

dependencies {
    // Core Spring Boot
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-web'

    // DB & Migrations
    implementation 'org.flywaydb:flyway-core'
    implementation 'org.flywaydb:flyway-database-postgresql'
    runtimeOnly 'com.h2database:h2'
    runtimeOnly 'org.postgresql:postgresql'

    // OpenAPI / Swagger UI
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.8.12'

    // Lombok
    implementation "org.projectlombok:lombok:${lombokVersion}"
    annotationProcessor "org.projectlombok:lombok:${lombokVersion}"

    // Testing
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
    testImplementation "org.mockito:mockito-core:${mockitoVersion}"
    testImplementation "org.junit.jupiter:junit-jupiter-api:${junitVersion}"
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    // Testcontainers
    testImplementation 'org.testcontainers:junit-jupiter'
    testImplementation 'org.testcontainers:postgresql'
}

tasks.named('test') { useJUnitPlatform() }
