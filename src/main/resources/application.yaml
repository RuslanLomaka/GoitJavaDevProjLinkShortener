# ====================================================
# SPRING BOOT CONFIGURATION
# This file defines application settings for different profiles:
#   - dev  = local development (H2 in-memory DB)
#   - prod = production (PostgreSQL via Docker or real DB)
#
# Values like ${DB_URL} are read from your .env file (thanks to spring-dotenv)
# or from environment variables (e.g. Docker Compose).
#
# Example .env values (put these in your .env file, not here!):
# ------------------------------------------------------------
# DB_URL=jdbc:h2:mem:shortenerdb;MODE=PostgreSQL;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE
# DB_DRIVER=org.h2.Driver
# DB_USERNAME=sa
# DB_PASSWORD=
# JPA_DDL_AUTO=validate
# HIBERNATE_DIALECT=org.hibernate.dialect.H2Dialect
# FLYWAY_ENABLED=true
# FLYWAY_LOCATIONS=classpath:db/migration/h2
#
# # For Postgres (prod)
# DB_HOST=localhost
# DB_PORT=5432
# DB_NAME=url_shortener
# DB_USERNAME=postgres
# DB_PASSWORD=postgres
# DB_DRIVER_PROD=org.postgresql.Driver
# HIBERNATE_DIALECT_PROD=org.hibernate.dialect.PostgreSQLDialect
#
# # App-specific
# JWT_SECRET=change-me
# JWT_TTL_SECONDS=3600
# APP_BASE_URL=http://localhost:8080
# ====================================================

spring:
  profiles:
    default: dev   # default profile if none specified

server:
  port: ${SERVER_PORT:8080}   # default port is 8080

app:
  base-url: ${APP_BASE_URL:http://localhost:8080}   # base URL used in responses, can be overridden

jwt:
  secret: ${JWT_SECRET:dev-secret-change-me}        # JWT signing secret (set in .env or compose)
  ttl-seconds: ${JWT_TTL_SECONDS:3600}              # JWT token lifetime in seconds

---
# ===================== DEV (H2 in-memory DB) =====================
spring:
  config:
    activate:
      on-profile: dev

  datasource:
    url: ${DB_URL}                     # e.g. jdbc:h2:mem:shortenerdb;MODE=PostgreSQL;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE
    driver-class-name: ${DB_DRIVER}    # e.g. org.h2.Driver
    username: ${DB_USERNAME}           # e.g. sa
    password: ${DB_PASSWORD}           # usually empty for H2

  jpa:
    hibernate:
      ddl-auto: ${JPA_DDL_AUTO:validate}
    properties:
      hibernate:
        dialect: ${HIBERNATE_DIALECT}  # e.g. org.hibernate.dialect.H2Dialect

  flyway:
    enabled: ${FLYWAY_ENABLED:true}
    locations: ${FLYWAY_LOCATIONS:classpath:db/migration/h2}

---
# ===================== PROD (PostgreSQL) =====================
spring:
  config:
    activate:
      on-profile: prod

  datasource:
    # Docker Compose sets SPRING_DATASOURCE_URL directly â†’ this will take precedence.
    # Otherwise, we construct it from DB_HOST, DB_PORT, DB_NAME.
    url: ${SPRING_DATASOURCE_URL:jdbc:postgresql://${DB_HOST:db}:${DB_PORT:5432}/${DB_NAME:url_shortener}}
    driver-class-name: ${DB_DRIVER_PROD:org.postgresql.Driver}
    username: ${SPRING_DATASOURCE_USERNAME:${DB_USERNAME:postgres}}
    password: ${SPRING_DATASOURCE_PASSWORD:${DB_PASSWORD:postgres}}

  jpa:
    hibernate:
      ddl-auto: validate
    properties:
      hibernate:
        dialect: ${HIBERNATE_DIALECT_PROD:org.hibernate.dialect.PostgreSQLDialect}

  flyway:
    enabled: true
    locations: classpath:db/migration/postgresql
