# ====================================================
# SPRING BOOT CONFIGURATION
# Profiles:
#   - dev  = local development (H2 in-memory DB)
#   - prod = PostgreSQL (local/native or Docker)
#
# Env vars are read from .env (spring-dotenv) or the OS.
# ====================================================

spring:
  profiles:
    default: dev   # default profile if none specified

server:
  port: ${SERVER_PORT:8080}

app:
  base-url: ${APP_BASE_URL:http://localhost:8080}

jwt:
  secret: ${JWT_SECRET:dev-secret-change-me}
  ttl-seconds: ${JWT_TTL_SECONDS:3600}

---
# ===================== DEV (H2 in-memory DB) =====================
spring:
  config:
    activate:
      on-profile: dev

  h2:
    console:
      enabled: true
      path: /h2-console

  datasource:
    url: ${DB_URL}
    driver-class-name: ${DB_DRIVER}
    username: ${DB_USERNAME}
    password: ${DB_PASSWORD}

  jpa:
    hibernate:
      ddl-auto: ${JPA_DDL_AUTO:validate}
    properties:
      hibernate:
        dialect: ${HIBERNATE_DIALECT}

  flyway:
    enabled: ${FLYWAY_ENABLED:true}
    locations: ${FLYWAY_LOCATIONS:classpath:db/migration/h2}

---
# ===================== PROD (PostgreSQL) =====================
spring:
  config:
    activate:
      on-profile: prod

  datasource:
    # If SPRING_DATASOURCE_URL is set (e.g., by Docker Compose), it wins.
    # Otherwise, it's built from DB_HOST/DB_PORT/DB_NAME.
   url: ${SPRING_DATASOURCE_URL:jdbc:postgresql://${DB_HOST:db}:${DB_PORT:5432}/${DB_NAME:link_shortener}}
   driver-class-name: ${DB_DRIVER_PROD:org.postgresql.Driver}
   username: ${SPRING_DATASOURCE_USERNAME:${DB_USERNAME_PROD:postgres}}
   password: ${SPRING_DATASOURCE_PASSWORD:${DB_PASSWORD_PROD:postgres}}

  jpa:
    hibernate:
      ddl-auto: validate
    properties:
      hibernate:
        dialect: ${HIBERNATE_DIALECT_PROD:org.hibernate.dialect.PostgreSQLDialect}

  flyway:
    enabled: true
    locations: classpath:db/migration/postgresql
